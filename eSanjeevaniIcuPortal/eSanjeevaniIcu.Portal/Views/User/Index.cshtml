@model eSanjeevaniIcu.Portal.Models.UserViewModel
@using Microsoft.Extensions.Options;
@using eSanjeevaniIcu.Portal.Controllers;
@using eSanjeevaniIcu.Portal;

@inject IOptions<ApplicationConfigurations> OptionsApplicationConfiguration
@{
    string apiUrl = @OptionsApplicationConfiguration.Value.ApplicationHostUrl;
    ViewData["Title"] = "::User::";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/js/sweet-alert.js"></script>
<link href="~/css/sweet-alert.css" rel="stylesheet" />
<script type="text/javascript">

    function checkconfirm() {
        if (confirm('Are you sure?')) {
            return true;
        }
        else {
            return false;
        }
    }
</script>
<script>
    $(document).ready(function () {
        if ('@TempData["SubmitResult"]' == '@Common.MsgSaveSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgSaveSuccess', "success");
        }
        else if ('@TempData["SubmitResult"]' == '@Common.MsgUpdateSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgUpdateSuccess', "success");
        }
        else if ('@TempData["SubmitResult"]' == '@Common.MsgDeleteSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgDeleteSuccess', "success");
        }
    });

    $(document).ready(function () {
        if ('@TempData["PasswordMessage"]' == 'PasswordSendSuccessfully') {
            swal("Success", "Password has been sent to your email!", "success");
        }
        if ('@TempData["PasswordMessage"]' == 'PasswordSendFailed') {
            swal("Success", "Password has been sent to your email!", "success");
        }
    });
</script>
<script>
    $(document).ready(function () {
        $("#txtSearchText").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#tblAppUserData tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("tblAppUserData");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 0; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
<style>
    .searchInput {
        width: 300px;
        border: 1px solid #d1d1d1;
        border-radius: 3px;
        padding: 9px 10px 9px 35px;
        margin-left: 10px;
        background: url(@apiUrl/images/search-icon.png) no-repeat 10px center;
        font-weight: 500 !important;
    }
</style>
<div class="PageBorder">
    <div class="row">
        <div class="col-md-12">
            <div class="table color-table PageTitle">
                <div class="row">
                    <div class="col-md-8">
                        User Master
                    </div>
                    <div class="col-md-4" style="text-align:right">
                        <a class="btn btn-primary" asp-action="Create">Create New</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div class="row">
    <div class="col-md-12">
    <div class="table color-table PageTitle">
    <div class="row">
    <div class="col-md-8">
    Users
    </div>
    <div class="col-md-4" style="text-align:right;">
    <a class="btn btn-primary" asp-action="Create">Create New</a>
    </div>
    </div>
    </div>
    </div>
    </div>*@
    <div class="row">
        <div class="col-md-12 text-right" style="padding-right:20px;">
            <input id="txtSearchText" type="text" class="searchInput" placeholder="Search...">
        </div>
    </div>

    <div class="row">
        <table class="table color-table">
            <thead class="text-uppercase1">
                <tr>
                    @*<th onclick="sortTable(0)">
                    Call Sign No
                    <i class="mdi mdi-sort"></i>
                    </th>*@
                    <th onclick="sortTable(0)">
                        User Name
                        <i class="mdi mdi-sort"></i>
                    </th>
                    @*<th onclick="sortTable(2)">
                    Initial
                    <i class="mdi mdi-sort"></i>
                    </th>*@
                    @*<th  onclick="sortTable(2)">
                    Last Name
                    <i class="mdi mdi-sort"></i>
                    </th>*@
                    <th onclick="sortTable(1)" style="min-width: 130px;">
                        Mobile No
                        <i class="mdi mdi-sort"></i>
                    </th>
                    <th onclick="sortTable(2)">
                        Email
                        <i class="mdi mdi-sort"></i>
                    </th>

                    <th onclick="sortTable(3)">
                        User Type
                        <i class="mdi mdi-sort"></i>
                    </th>
                    <th onclick="sortTable(4)">
                        Status
                        <i class="mdi mdi-sort"></i>
                    </th>
                    <th style="min-width:330px;"></th>
                </tr>
            </thead>
            <tbody id="tblAppUserData">
                @foreach (var item in Model.lstUserViewModel)
                {
                    <tr>
                        @*<td>
                    @Html.DisplayFor(modelItem => item.CallSignNo)
                    </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        @*<td>
                    @Html.DisplayFor(modelItem => item.Initial)
                    </td>*@
                        @*<td>
                    @Html.DisplayFor(modelItem => item.LastName)
                    </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.MobileNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StatusName)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.UserId" class="btn btn-primary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.UserId" class="btn btn-primary btn-sm">Delete</a>
                            <a asp-action="Details" asp-route-id="@item.UserId" class="btn btn-primary btn-sm">Details</a>
                            <a onclick="return checkconfirm()" asp-action="EmailPassword" asp-route-id="@item.UserId" class="btn btn-primary btn-sm">Email Password</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>