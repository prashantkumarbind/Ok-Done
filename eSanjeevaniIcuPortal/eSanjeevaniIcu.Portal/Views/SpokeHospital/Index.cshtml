@model eSanjeevaniIcu.Portal.Models.SpokeHospital.SpokeHospitalViewModel
@using Microsoft.Extensions.Options;
@using eSanjeevaniIcu.Portal.Controllers;
@using eSanjeevaniIcu.Portal;
@inject IOptions<ApplicationConfigurations> OptionsApplicationConfiguration
@{
    string apiUrl = @OptionsApplicationConfiguration.Value.ApplicationHostUrl;
    ViewData["Title"] = "Spoke Hospital";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.datatables.net/1.13.8/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.13.8/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.8/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.14.1/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link href="~/css/sweet-alert.css" rel="stylesheet" />
<script src="~/js/sweet-alert.js"></script>
<script src="~/js/ceo.js"></script>
<link href="~/css/coe.css" rel="stylesheet" />
<script>
    $(document).ready(function () {
        $("#txtSearchText").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#tblGroupMaster tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(document).ready(function () {
        if ('@TempData["SubmitResult"]' == '@Common.MsgSaveSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgSaveSuccess', "success");
        }
        else if ('@TempData["SubmitResult"]' == '@Common.MsgUpdateSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgUpdateSuccess', "success");
        }
        else if ('@TempData["SubmitResult"]' == '@Common.MsgDeleteSuccess') {
            swal("Success", '@OptionsApplicationConfiguration.Value.MsgDeleteSuccess', "success");
        }
    });
    ////

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("tblGroupMaster");
        switching = true;       
        dir = "asc";       
        while (switching) {           
            switching = false;
            rows = table.rows;           
            for (i = 0; i < (rows.length - 1); i++) {              
                shouldSwitch = false;               
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];              
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {                       
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {                        
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
               
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;               
                switchcount++;
            } else {
                
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
<style>
    .searchInput {
        width: 300px;
        border: 1px solid #d1d1d1;
        border-radius: 3px;
        padding: 9px 10px 9px 35px;
        margin-left: 10px;
        background: url(@apiUrl/images/search-icon.png) no-repeat 10px center;
        font-weight: 500 !important;
    }
</style>
<style>
    .loader {
        height: 30px;
        aspect-ratio: 6;
        --c: #0000 64%,#000 66% 98%,#0000 101%;
        background: radial-gradient(35% 146% at 50% 159%,var(--c)) 0 0, radial-gradient(35% 146% at 50% -59%,var(--c)) 25% 100%;
        background-size: calc(100%/3) 50%;
        background-repeat: repeat-x;
        clip-path: inset(0 100% 0 0);
        animation: l2 1s infinite linear;
    }

    @@keyframes l2 {
        90%, to {
            clip-path: inset(0)
        }
    }
</style>
<div class="PageBorder">
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="table color-table PageTitle">
                <div class="row">
                    <div class="col-md-8">
                        Spoke Hospital
                    </div>
                    <div class="col-md-4" style="text-align:right">
                        <a class="btn btn-primary" asp-action="Create"><i class="fa-solid fa-plus"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
  
    <div class="" style="padding:10px;">
        <table id="SpokeList" class="table-hover table-striped row-border table-sm" style="width:100%;">
            <thead>
                <tr>
                    <th >
                        SL.No.                       
                    </th>
                    <th >
                        Created Date                       
                    </th>
                    <th >
                        Spoke                       
                    </th>
                    <th >
                        COE                       
                    </th>
                    <th >
                        State                       
                    </th>
                    <th >
                        Status                       
                    </th>                 
                    <th >Actions</th>
                </tr>
            </thead>
          
        </table>
    </div>
    <div class="row" style="padding:10px;">
    </div>
</div>
<div id="loader" class="loader"></div>
<script>
 $(document).ready(function () {
        $('#SpokeList').dataTable({
            "ajax": {
                "url": '@apiUrl/SpokeHospital/GetSpokeList',
                "type": "GET"
            },
            autoWidth: false,
            responsive: {

            },
            "columnDefs": [
                { "width": "7%", "targets": 0 },
                { "width": "15%", "targets": 1 },
                { "width": "15%", "targets": 2 },
                { "width": "20%", "targets": 3 },
                { "width": "15%", "targets": 4 },
                { "width": "15%", "targets": 5 },
                { "width": "13%", "targets": 6 },
            ],
            columns: [
                {
                    data: 'spokeHospitalId',
                    render: function (data, type, row, meta) {
                        return meta.row + 1;
                    }
                },

                {
                    data: 'createdOn',
                    render: function (data, type, row, meta) {

                        return moment(data).format('DD-MMM-YYYY');
                    }
                },
                { data: 'spokeHospitalName' },
                { data: 'hubHospitalName' },
                { data: 'stateName' },
                { data: 'status',
                    render: function(data, type, row, meta) {
                        let checked = data == true ? 'checked' : '';
                        return `<div class="custom-control custom-switch"><input type="checkbox" class="custom-control-input" ${checked} id="statusswitch" disabled><label class="custom-control-label" for="statusswitch"></label></div>`;
                    }
                },
                {
                    data: 'spokeHospitalId',
                    render: function (data, type, row, meta) {

                        return `<a class="btn btn-primary btn-sm" style="color:#fff" href="@apiUrl/SpokeHospital/Edit/${data}" title="Edit"><i class="fa-solid fa-edit"></i></a> 
                                <a class="btn btn-primary btn-sm" style="color:#fff" href="@apiUrl/SpokeHospital/Details/${data}" title="Details"><i class="fa-solid fa-eye"></i></a>
                                    <a class="btn btn-primary btn-sm" style="color:#fff" onclick = "Delete(${data})" title="Delete"><i class="fa-solid fa-trash"></i></a>
                                        <button class="btn btn-primary btn-sm" style="color:#fff" onclick=ManageSpoke(${data})><i class="fa-solid fa-gear"></i></button>`;
                    }
                }
            ]
        });
    });

    function ManageSpoke(spokeHospitalId) {
        let url = "@apiUrl/SpokeHospital/ManageSpoke";
        post(url, { 'spokeHospitalId': spokeHospitalId })
    } 

    function Delete(id) {

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });
        swalWithBootstrapButtons.fire({
            title: "Are you sure?",
            text: "You want to delete",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'Post',
                    url: "@apiUrl/SpokeHospital/Delete",
                    data: { 'id': id },
                    success: function (data) {
                        swalWithBootstrapButtons.fire({
                            title: "Deleted!",
                            text: "Your record has been deleted.",
                            icon: "success"
                        });
                        window.location.reload();
                    }
                });

            } else if (

                result.dismiss === Swal.DismissReason.cancel
            ) {

            }
        });
    }

    var loader = document.getElementById("loader");
    window.addEventListener("load", function () {
        loader.style.display = "none";
    })
</script>
